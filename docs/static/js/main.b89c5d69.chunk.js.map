{"version":3,"sources":["components/Modal/styles.js","components/Modal/index.js","components/ListOfImages/index.js","App.js","reportWebVitals.js","index.js"],"names":["ModalContainer","styled","div","Content","Modal","setIsOpen","className","onClick","open","ListOfImages","useState","image","setImage","GetImage","a","fetch","resp","json","data","results","console","log","useEffect","map","img","src","id","App","isOpen","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6kBAEO,IAAMA,EAAiBC,IAAOC,IAAV,KAadC,EAAUF,IAAOC,IAAV,KCZPE,EAAQ,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAMtB,OACE,cAACL,EAAD,UAEE,eAACG,EAAD,WACE,2CACA,wBACEG,UAAU,uBACVC,QAXY,WAClBF,GAAU,SAAAG,GAAI,OAAW,MAQrB,qC,wBCTKC,G,MAAe,SAAC,GAAmB,IAAjBJ,EAAgB,EAAhBA,UAAgB,EACnBK,mBAAS,IADU,mBACtCC,EADsC,KAC/BC,EAD+B,KAKtCC,EAAQ,uCAAG,8BAAAC,EAAA,kHAEIC,MAFJ,4DAETC,EAFS,gBAGIA,EAAKC,OAHT,OAGTC,EAHS,OAIfN,EAASM,EAAKC,SACdC,QAAQC,IAAKH,EAAKC,SALH,2CAAH,qDASdG,qBAAU,WACTT,MAEC,IAQH,OACE,sBAAKP,UAAU,YAAf,UAEE,oBAAIA,UAAU,0CAAd,+BACA,qBAAKA,UAAU,MAAf,SAEIK,EAAMY,KAAI,SAAAC,GAAG,OACX,qBAAKlB,UAAU,aAAf,SACE,qBACEA,UAAU,sCAEVmB,IAAKD,EAAIb,OADFa,EAAIE,WAUrB,wBACEpB,UAAU,yCACVC,QA5Bc,WAClBF,GAAU,SAAAG,GAAI,OAAW,MAyBvB,2B,MC7BSmB,MAff,WAAgB,IAAD,EAEejB,mBAAS,CACnCF,MAAK,IAHM,mBAENoB,EAFM,KAEEvB,EAFF,KAMb,OACE,qBAAKC,UAAU,MAAf,SAEIsB,EAAS,cAAC,EAAD,CAAOvB,UAAYA,IAAiB,cAAC,EAAD,CAAcA,UAAYA,OCHhEwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b89c5d69.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const ModalContainer = styled.div`\r\n  \r\n  border: 1px solid #000000;\r\n  height: 300px;\r\n  width: 400px;\r\n  border-radius: 10%;\r\n  margin: 0 auto;\r\n  background-color:#6D6563;\r\n  margin-top: 20px;\r\n\r\n  \r\n`;\r\n\r\nexport const Content = styled.div`\r\n  color: white; \r\n  padding: 30px;\r\n  \r\n`;\r\n","import React from \"react\";\r\nimport { ModalContainer, Content } from \"./styles\";\r\n\r\nexport const Modal = ({ setIsOpen }) => {\r\n\r\n  const handleClick = () => {\r\n    setIsOpen(open => open = false);\r\n\r\n  }\r\n  return (\r\n    <ModalContainer >\r\n\r\n      <Content>\r\n        <h1>Contenido</h1>\r\n        <button\r\n          className=\"btn btn-primary mt-5\"\r\n          onClick={ handleClick }\r\n        >\r\n          Ejecutar Consulta\r\n        </button>\r\n\r\n      </Content>\r\n\r\n    </ModalContainer>\r\n  );\r\n};\r\n ","import React, { useEffect, useState } from \"react\";\r\n\r\nimport './style.css';\r\n\r\n\r\nexport const ListOfImages = ({ setIsOpen }) => {\r\n  const [image, setImage] = useState([]);\r\n\r\n \r\n\r\n   const GetImage = async()=> {\r\n     const url = `https://rickandmortyapi.com/api/character/`\r\n     const resp = await fetch(url);\r\n     const data = await resp.json();\r\n     setImage(data.results);\r\n     console.log (data.results);\r\n\r\n\r\n   }\r\n   useEffect(() => {\r\n    GetImage();\r\n   \r\n  }, []);\r\n\r\n  const handleClick = () => {\r\n    setIsOpen(open => open = true)\r\n  }\r\n\r\n   \r\n\r\n  return (\r\n    <div className=\"container\">\r\n\r\n      <h1 className=\"title animate__animated animate__bounce\">Lista de Imagenes</h1>\r\n      <div className=\"row\">\r\n        {\r\n          image.map(img => (\r\n            <div className=\"col-4 mb-4\">\r\n              <img \r\n                className=\"rounded-circle border border-danger\"\r\n                key = {img.id} \r\n                src={img.image}\r\n              />\r\n\r\n            </div>\r\n\r\n          ))\r\n        }\r\n     </div>\r\n\r\n      <button\r\n        className=\"btn btn-lg btn-block btn-primary mb-3 \"\r\n        onClick={ handleClick }\r\n      >\r\n        Ir Atras\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import { Modal } from \"./components/Modal\";\r\nimport { ListOfImages } from \"./components/ListOfImages\";\r\n\r\nimport \"./App.css\";\r\nimport { useState } from \"react\";\r\n\r\nfunction App() {\r\n\r\n  const [isOpen, setIsOpen] = useState({\r\n    open:true\r\n  })\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {\r\n        isOpen ? <Modal setIsOpen={ setIsOpen } /> : <ListOfImages setIsOpen={ setIsOpen } />\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n ","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals(); \r\n"],"sourceRoot":""}